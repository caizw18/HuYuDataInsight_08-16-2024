class Solution {
public:
    int calculate(string s) {
        stack<int> stack;
        int result = 0;
        int number = 0;
        int sign = 1;
        
        for (int i = 0; i < s.length(); i++) {
            char c = s[i];
            
            if (isdigit(c)) {
                number = number * 10 + (c - '0');
            } else if (c == '+') {
                result += sign * number;
                number = 0;
                sign = 1;
            } else if (c == '-') {
                result += sign * number;
                number = 0;
                sign = -1;
            } else if (c == '(') {
                stack.push(result);
                stack.push(sign);
                sign = 1;
                result = 0;
            } else if (c == ')') {
                result += sign * number;
                number = 0;
                result *= stack.top();
                stack.pop();
                result += stack.top();
                stack.pop();
            }
        }
        if (number != 0) {
            result += sign * number;
        }
        return result;
    }
};

// Example usage:
string expression = "(1+(4+5+2)-3)+(6+8)";
Solution solution;
cout << solution.calculate(expression) << endl;  // Output: 23
